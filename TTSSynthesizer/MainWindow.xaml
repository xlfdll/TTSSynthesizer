<Window x:Class="TTSSynthesizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TTSSynthesizer"
        mc:Ignorable="d"
        Title="Text-to-Speech Synthesizer" Icon="pack://application:,,,/TTSSynthesizer.ico"
        Width="800" Height="600" MinWidth="800" MinHeight="600"
        WindowStartupLocation="CenterScreen" AllowDrop="True"
        FocusManager.FocusedElement="{Binding ElementName=ContentTextBox}"
        PreviewDragOver="MainWindow_PreviewDragOver" Drop="MainWindow_Drop"
        Loaded="MainWindow_Loaded">

    <Grid>
        <Grid.Resources>
            <Style TargetType="GroupBox">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                <Setter Property="Height" Value="30"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Header="Controls">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="3"/>
                            <Setter Property="Orientation" Value="Horizontal"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0">
                        <Button Command="{x:Static local:TextCommands.NewCommand}">
                            <StackPanel>
                                <Image Source="{StaticResource NewIcon}"/>
                                <AccessText Text="_New Text"/>
                            </StackPanel>
                        </Button>
                        <Button Command="{x:Static local:TextCommands.OpenCommand}">
                            <StackPanel>
                                <Image Source="{StaticResource OpenIcon}"/>
                                <AccessText Text="_Open Text Document"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <StackPanel x:Name="VoiceControlStackPanel" Grid.Row="1" FocusManager.IsFocusScope="True">
                        <Button Command="{x:Static local:VoiceCommands.PlayCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=State}" Value="Speaking">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <StackPanel>
                                                        <Image Source="{StaticResource PauseIcon}"/>
                                                        <AccessText Text="_Pause"/>
                                                    </StackPanel>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=State}" Value="Paused">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <StackPanel>
                                                        <Image Source="{StaticResource PlayIcon}"/>
                                                        <AccessText Text="Re_sume"/>
                                                    </StackPanel>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>

                                    <!-- The content must be defined inside the containing Style in order to use DataTrigger -->
                                    <!-- Otherwise the content in DataTrigger will be ignored -->
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel>
                                                <Image Source="{StaticResource PlayIcon}"/>
                                                <AccessText Text="_Play"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Height" Value="30"/>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Command="{x:Static local:VoiceCommands.StopCommand}">
                            <StackPanel>
                                <Image Source="{StaticResource StopIcon}"/>
                                <AccessText Text="_Stop"/>
                            </StackPanel>
                        </Button>
                        <Button Command="{x:Static local:VoiceCommands.RecordCommand}">
                            <StackPanel>
                                <Image Source="{StaticResource RecordIcon}"/>
                                <AccessText Text="_Record"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1" Header="Settings">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=State}" Value="Speaking">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=State}" Value="Paused">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>

                            <Setter Property="Margin" Value="5"/>
                        </Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Margin" Value="3"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="Slider">
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="_Voice"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" ItemsSource="{Binding Path=InstalledVoices}"
                          DisplayMemberPath="VoiceInfo.Name" SelectedValuePath="VoiceInfo"
                          SelectedIndex="0" SelectionChanged="VoiceComboBox_SelectionChanged"/>

                    <Label Grid.Row="1" Grid.Column="0" Content="_Rate"/>
                    <Slider Grid.Row="1" Grid.Column="1" Minimum="-10" Maximum="10" Value="{Binding Path=VoiceRate}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Path=VoiceRate}"/>

                    <Label Grid.Row="2" Grid.Column="0" Content="Vol_ume"/>
                    <Slider Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Path=VoiceVolume}"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Path=VoiceVolume}"/>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="2" Header="Infomation">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=Voice.Name}"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Description"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=Voice.Description}"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Culture"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Path=Voice.Culture}"/>

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Gender"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Path=Voice.Gender}"/>

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Age"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Path=Voice.Age}"/>

                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Status"/>
                    <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding Path=State}"/>
                </Grid>
            </GroupBox>
        </Grid>
        <TextBox x:Name="ContentTextBox" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                 AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"
                 Text="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=State}" Value="Speaking">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}" Value="Paused">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>

                    <Setter Property="Margin" Value="5"/>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Button Grid.Row="1" Grid.Column="0" Command="{x:Static local:GeneralCommands.AboutCommand}">
            <Image Source="{StaticResource AboutIcon}"/>
        </Button>
    </Grid>
</Window>